@model ControllRR.Application.Dto.SectorDto;
 @{

 }
 @await Html.PartialAsync("Partials/_GetAllSectors", Model)

@section Scripts {
    <script src="//cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
       $('#deviceTable').DataTable({
    processing: true,
    serverSide: true,
    ajax: {
        url: '/Sectors/GetList', // URL do endpoint no backend
        type: 'POST',
        dataType: 'json'
    },
    columns: [
        { data: 'name', name: 'Name' },
        { data: 'location', name: 'Location' },
        { data: 'address', name: 'Address' },
        { data: 'requesterName', name: 'RequesterName' },
        { data: 'neighborhood', name: 'Neighborhood' },
        { 
            data: null, // Coluna para ações
            orderable: false,
            searchable: false,
            render: function(data, type, row) {
                return `
                    <a class="btn btn-sm btn-success" href="/Sectors/SectorDetails/${row.id}"><span class="fa fa-eye"></span> Ver</a></button>
                    <a class="btn btn-sm btn-warning" href="/Sectors/SectorEdit/${row.id}"><span class="fa fa-edit"></span> Editar</a></button>
                `;
            }
        }
    ],
    language: {
        lengthMenu: 'Exibir _MENU_ registros por página',
        zeroRecords: 'Nenhum registro encontrado',
        info: 'Exibindo página _PAGE_ de _PAGES_',
        infoEmpty: 'Nenhum registro disponível',
        infoFiltered: '(filtrado de _MAX_ registros no total)',
        search: 'Pesquisar:',
        paginate: {
            first: 'Primeiro',
            last: 'Último',
            next: 'Próximo',
            previous: 'Anterior'
        }
    },
});

    </script>
}
